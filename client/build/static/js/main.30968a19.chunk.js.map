{"version":3,"sources":["Components/NavBar.jsx","Components/NewPokemon.jsx","Components/Pokemon.jsx","Components/SearchBar.jsx","Components/Types.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","CreatePokemon","useState","image","name","id","attack","defense","speed","weight","height","Pokemon","SearchBar","onSearch","pokemon","setPokemon","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Types","App","setPokemons","path","fetch","then","r","json","undefined","main","oldPokemons","alert","exact","render","component","NewPokemon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iQAIe,SAASA,IACpB,OACA,sBAAKC,UAAU,UAAf,UACI,cAAC,IAAD,CAASC,GAAI,IAAb,kBACA,cAAC,IAAD,CAASA,GAAI,WAAb,qBACA,cAAC,IAAD,CAASA,GAAI,YAAb,sBACA,cAAC,IAAD,CAASA,GAAI,kBAAb,gCACA,cAAC,IAAD,CAASA,GAAI,SAAb,qBAGP,CCZc,SAASC,IACpB,MAA0BC,mBAAS,CAC/BC,MAAM,GACNC,KAAK,GACLC,GAAG,GACHC,OAAO,GACPC,QAAQ,GACRC,MAAM,GACNC,OAAO,GACPC,OAAO,KARX,4BAmFH,CCnFc,SAASC,IAEvB,CCHc,SAASC,EAAT,GAAiC,IAAZC,EAAW,EAAXA,SAChC,EAA8BX,mBAAS,IAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KACA,OACI,uBAAMC,SAAU,SAACC,GACjBA,EAAEC,iBACFL,EAASC,EACR,EAHD,UAII,uBACAK,KAAK,OACLC,YAAY,gBACZC,MAAOP,EACPQ,SAAU,SAAAL,GAAC,OAAIF,EAAWE,EAAEM,OAAOF,MAAxB,IACX,uBAAOF,KAAK,SAASE,MAAM,aAGtC,CCjBc,SAASG,IAEvB,CCuEcC,MAhEf,WACE,MAAgCvB,mBAAS,IAAzC,mBAAiBwB,GAAjB,WA4BA,OACE,eAAC,SAAD,WACE,cAAC,EAAD,IACA,eAAC,SAAD,WACE,eAAC,QAAD,CACAC,KAAK,IADL,UAEE,cAAC,EAAD,IACA,cAACf,EAAD,CAAWC,SAhCnB,SAAkBC,GACdc,MAAM,wCAAD,OAAyCd,IAC7Ce,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IACNF,MAAK,SAACC,GACL,GAAG,SAAAA,GAAC,YAAeE,IAAXF,EAAEG,IAAN,EAA0B,CAC5B,IAAMnB,EAAUgB,EAAEG,KAClBP,GAAY,SAAAQ,GAAW,4BAAQA,GAAR,CAAqBpB,GAArB,GACxB,MACCqB,MAAM,oBAET,GACJ,IAkBK,SAOA,cAAC,QAAD,CACAC,OAAK,EAACT,KAAK,WACXU,OAAQ,kBAAM,cAAC1B,EAAD,GAAN,IAMR,cAAC,QAAD,CACAgB,KAAK,kBACLW,UAAW,CAACC,gBAEZ,cAAC,QAAD,CACAZ,KAAK,SACLW,UAAW,CAACd,gBAKnB,ECxDcgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECHDO,IAASX,OACP,cAAC,IAAMY,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAS1BX,G","file":"static/js/main.30968a19.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavBar.css'\r\n\r\nexport default function NavBar() {\r\n    return (\r\n    <div className='nav-bar'>\r\n        <NavLink to ='/'>Home</NavLink>\r\n        <NavLink to ='/pokemon'>Pokemon</NavLink>\r\n        <NavLink to ='/pokemons'>Pokemons</NavLink>\r\n        <NavLink to ='/pokemon/create'>Create New Pokemon</NavLink>\r\n        <NavLink to ='/types'>Types</NavLink>\r\n    </div>\r\n    )\r\n}\r\n\r\n<div className=\"App\">\r\n        <h1>Henry Pokemon</h1>\r\n        <image src=\"http://www.pokemonnext.it/wp-content/uploads/2020/10/pokemon-logo.png\"/>\r\n        <button>Home</button>\r\n</div>\r\n\r\n//AGREGARLE ESTILOS A NAVLINK","import React, {useState} from 'react';\r\n\r\nexport default function CreatePokemon () {\r\n    const [input, setInput] = useState({\r\n        image:'',\r\n        name:'',\r\n        id:'',\r\n        attack:'',\r\n        defense:'',\r\n        speed:'',\r\n        weight:'',                  //chequear esto de las comillas (son enteros)\r\n        height:''\r\n    })\r\n\r\n    const handleInputChange = () => {}\r\n    const handleSubmit = () => {}\r\n\r\n    // <form onSubmit>\r\n    //     <div>\r\n    //         <label>Image</label>\r\n    //         <input \r\n    //         type=\"text\"\r\n    //         placeholder=\"Image...\"\r\n    //         value={pokemon}\r\n    //         onChange={e => setPokemon(e.target.value)}/>\r\n    //     </div>\r\n    //     <div>\r\n    //         <label>Name:</label>\r\n    //         <input  \r\n    //         type=\"text\"\r\n    //         placeholder=\"Name...\"\r\n    //         value={pokemon}\r\n    //         onChange={e => setPokemon(e.target.value)}/>\r\n    //     </div>\r\n    //     <div>\r\n    //         <label>id:</label>\r\n    //         <input \r\n    //         type=\"text\"\r\n    //         placeholder=\"id...\"\r\n    //         value={pokemon}\r\n    //         onChange={e => setPokemon(e.target.value)}/>\r\n    //     </div>\r\n    //     <div>\r\n    //         <label>Attack:</label>\r\n    //         <input \r\n    //         type=\"text\"\r\n    //         placeholder=\"Attack...\"\r\n    //         value={pokemon}\r\n    //         onChange={e => setPokemon(e.target.value)}/>\r\n    //     </div>\r\n    //     <div>\r\n    //         <label>Defense:</label>\r\n    //         <input \r\n    //         type=\"text\"\r\n    //         placeholder=\"Defense...\"\r\n    //         value={pokemon}\r\n    //         onChange={e => setPokemon(e.target.value)}/>\r\n    //     </div>\r\n    //     <div>\r\n    //         <label>Speed:</label>\r\n    //         <input \r\n    //         type=\"text\"\r\n    //         placeholder=\"Speed...\"\r\n    //         value={pokemon}\r\n    //         onChange={e => setPokemon(e.target.value)}/>\r\n    //     </div>\r\n    //     <div>\r\n    //         <label>Height:</label>\r\n    //         <input \r\n    //         type=\"text\"\r\n    //         placeholder=\"Height...\"\r\n    //         value={pokemon}\r\n    //         onChange={e => setPokemon(e.target.value)}/>\r\n    //     </div>\r\n    //     <div>\r\n    //         <label>Weight:</label>\r\n    //         <input \r\n    //         type=\"text\"\r\n    //         placeholder=\"Weight...\"\r\n    //         value={pokemon}\r\n    //         onChange={e => setPokemon(e.target.value)}/>\r\n    //     </div>\r\n    //     <div>\r\n    //         <input type=\"submit\" value=\"Agregar\"/>\r\n    //     </div>\r\n    // </form>\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Pokemon () {\r\n    \r\n}","import React, {useState} from 'react';\r\n\r\nexport default function SearchBar ({onSearch}) {            //NO ENTIENDO este onsearch\r\n    const [pokemon, setPokemon] = useState(\"\")\r\n    return (\r\n        <form onSubmit={(e) => {\r\n        e.preventDefault();\r\n        onSearch(pokemon)\r\n        }}>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"Pokemón...\"\r\n            value={pokemon}\r\n            onChange={e => setPokemon(e.target.value)}/>\r\n            <input type=\"submit\" value=\"Buscar\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\n//ver de agregar QUE SEA EXACTO el name","export default function Types () {\r\n    \r\n}","import './App.css';\nimport React, {Route, Router, Routes, useState} from 'react'\nimport NavBar from './Components/NavBar'\nimport NewPokemon from './Components/NewPokemon.jsx'\nimport Pokemon from './Components/Pokemon.jsx'\n// import Pokemons from './Components/Pokemons.jsx'\nimport SearchBar from './Components/SearchBar.jsx'\nimport Types from './Components/Types.jsx'\n\nfunction App() {\n  const [pokemons, setPokemons] = useState([])\n  // const [types, setTypes] = useState([])\n\n  function onSearch(pokemon) {\n      fetch(`http://localhost:3001/pokemons/?name=${pokemon}`)\n      .then(r => r.json())\n      .then((r) => {\n        if(r => r.main !== undefined) {\n          const pokemon = r.main\n          setPokemons(oldPokemons => [...oldPokemons, pokemon])\n        } else {\n          alert('Pokemon not found')\n      }\n      })\n  }\n\n  function onFilter(){\n    let pokemonsCreated = pokemons.filter(p => p.id > 950)\n  }\n  //   let pokemonsByType = pokemons.filter()\n\n  // function onSort(){\n  //   let pokemonsAscByAlph = pokemons.sort()\n  //   let pokemonsDescByAlph = pokemons.sort()\n  //   let pokemonsAscByAttack = pokemons.sort()\n  //   let pokemonsDescByAttack = pokemons.sort()\n  // }\n\n  return (\n    <Router>\n      <NavBar/>\n      <Routes>      \n        <Route      //es un componente que viene armado con diversas propiedades        //página principal\n        path='/'>     \n          <NavBar />\n          <SearchBar onSearch={onSearch}/>\n          {/* <Pokemons pokemons={onFilter()}/> */}\n          {/* <Pokemons pokemons={onSort()}/> */} */\n        </Route>\n        <Route\n        exact path='/pokemon'         //con path + component puedo hacer 'paths dinámicos'\n        render={() => <Pokemon/>}             //component POR DEFAUL le pasa tres props: MATCH, LOCATION, HISTORY\n        />                            \n        {/* <Route                    //RENDER en vez de component si quiero pasarle propiedades al componente\n        exact path='/pokemons/:id'\n        render={() => {}}\n        /> */}\n        <Route\n        path='/pokemon/create'\n        component={{NewPokemon}}\n        />\n        <Route\n        path='/types'\n        component={{Types}}\n        />\n      </Routes>\n    </Router>\n  );//reemplaza al Switch de la v5 de R.R.\n}   //y lo envuelve BrowserRouter o HashRouter (agrega un # a la ruta) FALTA HACER ESTO?\n\n//<Link/> es OTRO COMPONENTE que genera un <a> </a> que permite REDIRIGIR a otra URL\n// LINK PERMITE NAVEGAR ENTRE LAS ROUTE SIN TENER QUE MODIFICAR MANUALMENTE LA URL\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport BrowserRouter from 'react'\n\nReactDOM.render(\n  <React.StrictMode>     \n      <App />      \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//LE AGREGUÉ BROWSER ROUTER PERO HABRÍA QUE VER SI ESTÁ BIEN\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}